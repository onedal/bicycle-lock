# Version 1.5.0
# for rubocop 1.12.0

AllCops:
  TargetRubyVersion: 2.5
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  DisabledByDefault: true
  Exclude:
    - ".git/**/*"
    - "node_modules/**/*"
    - "vendor/**/*"
    - "*/**/vendor/**/*"
    - "appsync/*"
    - "buildspec.yml"
    - "*/**/spec_helper.rb"
  # RSpec:
  #   Patterns:
  #   - _spec.rb
  #   - "(?:^|/)spec/"
  # RSpec/FactoryBot:
  #   Patterns:
  #   - spec/factories/**/*.rb
  #   - features/support/factories/**/*.rb

##################################
##################################
##################################
######### GEMFILE ################
##################################
##################################
##################################
Bundler/DuplicatedGem:
  Enabled: true

Bundler/InsecureProtocolSource:
  Enabled: false

Bundler/OrderedGems:
  Enabled: false

##################################
##################################
##################################
##################################
######### Security ###################
##################################
##################################
##################################
##################################

Security/Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true

Security/JSONLoad:
  Enabled: true

Security/MarshalLoad:
  Enabled: true

Security/Open:
  Description: "The use of Kernel#open represents a serious security risk."
  Enabled: true

Security/YAMLLoad:
  Enabled: true

##################################
##################################
##################################
######### GEM SPEC ###############
##################################
##################################
##################################
Gemspec/OrderedDependencies:
  Enabled: false

Gemspec/RequiredRubyVersion:
  Description:
    Checks that `required_ruby_version` of gemspec and `TargetRubyVersion` of
    .rubocop.yml are equal.
  Enabled: false
  Include:
    - "**/*.gemspec"

##################################
##################################
##################################
##################################
##################################
##################################
######### Linting ###################
##################################
##################################
##################################
##################################
##################################
Lint/AmbiguousBlockAssociation:
  Enabled: true

Lint/AmbiguousOperator:
  Description:
    Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-as-args
  Enabled: true

Lint/AmbiguousRegexpLiteral:
  Description:
    Checks for ambiguous regexp literals in the first argument of a method
    invocation without parenthesis.
  Enabled: true

Lint/AssignmentInCondition:
  Description: Don't use assignment in conditions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#safe-assignment-in-condition
  Enabled: true
  AllowSafeAssignment: false

Lint/BigDecimalNew:
  Description: "`BigDecimal.new()` is deprecated. Use `BigDecimal()` instead."
  Enabled: true

Lint/BooleanSymbol:
  Enabled: true

Lint/CircularArgumentReference:
  Description: Don't refer to the keyword argument in the default value.
  Enabled: true

Lint/Debugger:
  Description: Check for debugger calls.
  Enabled: true

# Supports --auto-correct
Lint/DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: true

Lint/DisjunctiveAssignmentInConstructor:
  Enabled: true

Lint/DuplicateCaseCondition:
  Enabled: true

Lint/DuplicateMethods:
  Description: Check for duplicate methods calls.
  Enabled: true

Lint/DuplicateHashKey:
  Description: Check for duplicate keys in hash literals.
  Enabled: true

Lint/EachWithObjectArgument:
  Description: Check for immutable argument given to each_with_object.
  Enabled: false

Lint/ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: true

Lint/EmptyEnsure:
  Description: Checks for empty ensure block.
  Enabled: true

Lint/EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: true

Lint/EmptyWhen:
  Enabled: true

Lint/EnsureReturn:
  Description: Do not use return in an ensure block.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-return-ensure
  Enabled: true

Lint/ErbNewArguments:
  Enabled: false

Lint/FloatOutOfRange:
  Description: Catches floating-point literals too large or small for Ruby to represent.
  Enabled: true

Lint/FormatParameterMismatch:
  Description: The number of parameters to format/sprint must match the fields.
  Enabled: true

Lint/SuppressedException:
  Description: Don't suppress exception.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#dont-hide-exceptions
  Enabled: true

Lint/ImplicitStringConcatenation:
  Description:
    Checks for adjacent string literals on the same line, which could better
    be represented as a single string literal.
  Enabled: true

Lint/IneffectiveAccessModifier:
  Description:
    Checks for attempts to use `private` or `protected` to set the visibility
    of a class method, which does not work.
  Enabled: true

Lint/InheritException:
  Enabled: true
  # The default base class in favour of `Exception`.
  EnforcedStyle: standard_error

Lint/InterpolationCheck:
  Enabled: true

Lint/LiteralAsCondition:
  Description: Checks of literals used in conditions.
  Enabled: true

# Supports --auto-correct
Lint/LiteralInInterpolation:
  Description: Avoid interpolating literals in strings
  Enabled: true
  AutoCorrect: false

Lint/Loop:
  Description:
    Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#loop-with-break
  Enabled: true

Lint/MissingCopEnableDirective:
  # Maximum number of consecutive lines the cop can be disabled for.
  # 0 allows only single-line disables
  # 1 would mean the maximum allowed is the following:
  #   # rubocop:disable SomeCop
  #   a = 1
  #   # rubocop:enable SomeCop
  # .inf for any size
  MaximumRangeSize: .inf
  Description: "Checks for a `# rubocop:enable` after `# rubocop:disable`"
  Enabled: true

Lint/MultipleComparison:
  Enabled: true

Lint/NestedMethodDefinition:
  Description: Do not use nested method definitions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-methods
  Enabled: true

Lint/NextWithoutAccumulator:
  Enabled: false

Lint/NonLocalExitFromIterator:
  Description: Do not use return in iterator to cause non-local exit.
  Enabled: false

Lint/OrderedMagicComments:
  Description: "Checks the proper ordering of magic comments and whether a magic comment is not placed before a shebang."
  Enabled: true

Lint/ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces
  Enabled: true

Lint/PercentStringArray:
  Description: >-
    Checks for unwanted commas and quotes in %w/%W literals.
  Enabled: true

Lint/PercentSymbolArray:
  Enabled: false

Lint/RandOne:
  Description:
    Checks for `rand(1)` calls. Such calls always return `0` and most likely
    a mistake.
  Enabled: true

Lint/RedundantWithIndex:
  Enabled: true

Lint/RedundantWithObject:
  Enabled: false

Lint/RegexpAsCondition:
  Enabled: false

Lint/RequireParentheses:
  Description: Use parentheses in the method call to avoid confusion about precedence.
  Enabled: true

Lint/RescueException:
  Description: Avoid rescuing the Exception class.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-blind-rescues
  Enabled: false

Lint/RescueType:
  Enabled: true

Lint/ReturnInVoidContext:
  Enabled: false

Lint/SafeNavigationChain:
  Enabled: true

Lint/SafeNavigationConsistency:
  Enabled: true

Lint/ScriptPermission:
  Enabled: false

Lint/ShadowedArgument:
  Description: "Avoid reassigning arguments before they were used."
  Enabled: true

Lint/ShadowedException:
  Description: >-
    Avoid rescuing a higher level exception
    before a lower level exception.
  Enabled: false

Lint/ShadowingOuterLocalVariable:
  Description:
    Do not use the same name as outer local variable for block arguments
    or block local variables.
  Enabled: true

# Supports --auto-correct
Lint/RedundantStringCoercion:
  Description: Checks for Object#to_s usage in string interpolation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-to-s
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: false

Lint/UnifiedInteger:
  Enabled: true

Lint/FlipFlop:
  Description: Checks for flip flops
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-flip-flops
  Enabled: false

Lint/RedundantCopDisableDirective:
  Description: >-
    Checks for rubocop:disable comments that can be removed.
    Note: this cop is not disabled when disabling all cops. It must be explicitly disabled.
  Enabled: true

Lint/RedundantCopEnableDirective:
  Description: Checks for rubocop:enable comments that can be removed.
  Enabled: true

Lint/RedundantRequireStatement:
  Enabled: false

Lint/RedundantSplatExpansion:
  Enabled: false

Lint/UnreachableCode:
  Description: Unreachable code.
  Enabled: true

# Supports --auto-correct
Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: true

# Supports --auto-correct
Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: false

Lint/UriRegexp:
  Enabled: false

Lint/UselessAccessModifier:
  Description: Checks for useless access modifiers.
  Enabled: true

Lint/UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: true

Lint/BinaryOperatorWithIdenticalOperands:
  Description: Checks for comparison of something with itself.
  Enabled: true

Lint/UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true

Lint/UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: true

Lint/Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: true

##################################
##################################
##################################
######### Metrics ###################
##################################
##################################
##################################
##################################
# We're using cane for ABC complexity checks
Metrics/AbcSize:
  Enabled: true
  Max: 95

Metrics/BlockLength:
  Enabled: true
  Max: 125

Metrics/BlockNesting:
  Description: Avoid excessive block nesting
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#three-is-the-number-thou-shalt-count
  Enabled: false
  Max: 3

# We are not perfect robot-humans
Metrics/ClassLength:
  Enabled: true
  Max: 500

Metrics/CyclomaticComplexity:
  Description:
    A complexity metric that is strongly correlated to the number of test
    cases needed to validate a method.
  Enabled: false
  Max: 6

Layout/LineLength:
  Max: 120
  AllowURI: true

Metrics/MethodLength:
  Enabled: true
  Max: 60

Metrics/ModuleLength:
  Description: Avoid modules longer than 100 lines of code.
  Enabled: true
  CountComments: false
  Max: 500

Metrics/ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#too-many-params
  Enabled: true
  Max: 7
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Description: A complexity metric geared towards measuring complexity for a human reader.
  Enabled: true
  Max: 30
##################################
##################################
##################################
##################################
##################################
##################################
######### Naming ###################
##################################
##################################
##################################
##################################
##################################
Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  Enabled: true

Naming/AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#english-identifiers
  Enabled: true

Naming/BinaryOperatorParameterName:
  Description: When defining binary operators, name the argument other.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#other-arg
  Enabled: false

Naming/ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#camelcase-classes
  Enabled: true

Naming/ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#screaming-snake-case
  Enabled: false

Naming/FileName:
  Description: Use snake_case for source file names.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-files
  Enabled: true

Naming/HeredocDelimiterCase:
  Enabled: false

Naming/HeredocDelimiterNaming:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Description: >-
    Memoized method name should match memo instance variable name.
  Enabled: false

Naming/MethodName:
  Description: Use the configured style when naming methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case

Naming/PredicateName:
  Description: Check the names of predicate methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#bool-methods-qmark
  Enabled: true
  NamePrefix:
    - is_
    - has_
    - have_
  ForbiddenPrefixes:
    - is_
    - has_
    - have_

Naming/BlockParameterName:
  Description: >-
    Checks for block parameter names that contain capital letters,
    end in numbers, or do not meet a minimal length.
  Enabled: true

Naming/MethodParameterName:
  Description: >-
    Checks for method parameter names that contain capital letters,
    end in numbers, or do not meet a minimal length.
  Enabled: true

Naming/VariableName:
  Description: Use the configured style when naming variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: true
  EnforcedStyle: snake_case
  SupportedStyles:
    - snake_case

Naming/VariableNumber:
  Enabled: false

##################################
##################################
##################################
##################################
##################################
##################################
#############################
########### LAYOUT ##################################
##############################
##################################
##################################
##################################
##################################
##################################
# Type 'Style' (166):
# Supports --auto-correct
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  # Airbnb: https://github.com/airbnb/ruby#access-modifiers
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-public-private-protected
  Enabled: true
  EnforcedStyle: indent
  SupportedStyles:
    - outdent
    - indent

# Supports --auto-correct
Layout/ArrayAlignment:
  Description: Align the elements of an array literal if they span more than one line.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#align-multiline-arrays
  Enabled: true

# Supports --auto-correct
Layout/HashAlignment:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: false
  EnforcedHashRocketStyle: key
  EnforcedColonStyle: key
  EnforcedLastArgumentHashStyle: always_inspect
  SupportedLastArgumentHashStyles:
    - always_inspect
    - always_ignore
    - ignore_implicit
    - ignore_explicit

# Supports --auto-correct
Layout/ParameterAlignment:
  Description: Align the parameters of a method call if they span more than one line.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-double-indent
  Enabled: true
  EnforcedStyle: with_first_parameter
  SupportedStyles:
    - with_first_parameter
    - with_fixed_indentation

# Supports --auto-correct
Layout/BlockAlignment:
  Description: Align block ends correctly.
  Enabled: true

# Supports --auto-correct
Layout/BlockEndNewline:
  Description: Put end statement of multiline block on its own line.
  Enabled: true

# Supports --auto-correct
Layout/CaseIndentation:
  Description: Indentation of when in a case/when/[else/]end.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-when-to-case
  Enabled: true
  EnforcedStyle: case
  IndentOneStep: false

Layout/ClassStructure:
  Enabled: true
  Categories:
    module_inclusion:
      - include
      - prepend
      - extend
  ExpectedOrder:
    - module_inclusion
    - constants
    - public_class_methods
    - initializer
    - instance_methods
    - protected_methods
    - private_methods

Layout/ClosingHeredocIndentation:
  Enabled: false

# Supports --auto-correct
Layout/ClosingParenthesisIndentation:
  Description: Checks the indentation of hanging closing parentheses.
  Enabled: true

# Supports --auto-correct
Layout/CommentIndentation:
  Description: Indentation of comments.
  Enabled: true

Layout/ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the keyword.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#same-line-condition
  Enabled: true

# Supports --auto-correct
Layout/DefEndAlignment:
  Description: Align ends corresponding to defs correctly.
  Enabled: true
  EnforcedStyleAlignWith: start_of_line
  AutoCorrect: false

# Use trailing commas, because there are safer in ruby.
Layout/DotPosition:
  Enabled: true
  EnforcedStyle: trailing

# Supports --auto-correct
Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true

Layout/EmptyComment:
  Description: "Checks empty comment."
  Enabled: true

Layout/EmptyLineAfterMagicComment:
  Enabled: true

# Supports --auto-correct
Layout/EmptyLineBetweenDefs:
  Description: Use empty lines between defs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#empty-lines-between-methods
  Enabled: true
  AllowAdjacentOneLineDefs: false

# Supports --auto-correct
Layout/EmptyLines:
  Description: Don't use several empty lines in a row.
  Enabled: true

Layout/EmptyLineAfterGuardClause:
  Enabled: false

# Supports --auto-correct
Layout/EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  Enabled: true

Layout/EmptyLinesAroundArguments:
  Description: "Keeps track of empty lines around method arguments."
  Enabled: true

Layout/EmptyLinesAroundBeginBody:
  Enabled: true

# Supports --auto-correct
Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines

# Supports --auto-correct
Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - beginning_only
    - empty_lines
    - end_only
    - no_empty_lines

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false

# Supports --auto-correct
Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  Enabled: true

# Supports --auto-correct
Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
    - empty_lines
    - no_empty_lines

# Supports --auto-correct
Layout/EndAlignment:
  Description: Align ends correctly.
  # The value `keyword` means that `end` should be aligned with the matching
  # keyword (if, while, etc.).
  # The value `variable` means that in assignments, `end` should be aligned
  # with the start of the variable on the left hand side of `=`. In all other
  # situations, `end` should still be aligned with the keyword.
  # The value `start_of_line` means that `end` should be aligned with the start
  # of the line which the matching keyword appears on.
  Enabled: true
  EnforcedStyleAlignWith: keyword
  AutoCorrect: false

Layout/EndOfLine:
  Description: Use Unix-style line endings.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#crlf
  Enabled: false

# Supports --auto-correct
Layout/ExtraSpacing:
  Description: Do not use unnecessary spacing.
  Enabled: true
  AllowForAlignment: true

# Supports --auto-correct
Layout/FirstArrayElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line array.
  Enabled: true

# Supports --auto-correct
Layout/FirstHashElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line hash.
  Enabled: false

# Supports --auto-correct
Layout/FirstMethodArgumentLineBreak:
  Description:
    Checks for a line break before the first argument in a multi-line method
    call.
  Enabled: false

# Supports --auto-correct
Layout/FirstMethodParameterLineBreak:
  Description:
    Checks for a line break before the first parameter in a multi-line method
    parameter definition.
  Enabled: false

# Supports --auto-correct
Layout/FirstArgumentIndentation:
  Description: Checks the indentation of the first parameter in a method call.
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - consistent
    - consistent_relative_to_receiver
    - special_for_inner_method_call
    - special_for_inner_method_call_in_parentheses

# Supports --auto-correct
Layout/FirstArrayElementIndentation:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: true
  EnforcedStyle: consistent

# Supports --auto-correct
Layout/AssignmentIndentation:
  Description:
    Checks the indentation of the first line of the right-hand-side of a
    multi-line assignment.
  Enabled: true
  IndentationWidth:

# Supports --auto-correct
Layout/FirstHashElementIndentation:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
    - special_inside_parentheses
    - consistent

Layout/HeredocIndentation:
  Enabled: false

# Supports --auto-correct
Layout/IndentationConsistency:
  Description: Keep indentation straight.
  Enabled: true
  EnforcedStyle: normal
  SupportedStyles:
    - normal
    - rails

# Supports --auto-correct
Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true
  Width: 2

# Supports --auto-correct
Layout/InitialIndentation:
  Description: Checks the indentation of the first non-blank non-comment line in a file.
  Enabled: true

Layout/LeadingEmptyLines:
  Enabled: true

# Supports --auto-correct
Layout/LeadingCommentSpace:
  Description: Comments should start with a space.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#hash-space
  Enabled: true

# Supports --auto-correct
Layout/MultilineArrayBraceLayout:
  Description:
    Checks that the closing brace in an array literal is symmetrical with
    respect to the opening brace and the array elements.
  Enabled: true

# Supports --auto-correct
Layout/MultilineAssignmentLayout:
  Description: Check for a newline after the assignment operator in multi-line assignments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#indent-conditional-assignment
  Enabled: false
  SupportedTypes:
    - block
    - case
    - class
    - if
    - kwbegin
    - module
  EnforcedStyle: new_line
  SupportedStyles:
    - same_line
    - new_line

# Supports --auto-correct
Layout/MultilineBlockLayout:
  Description: Ensures newlines after multiline block do statements.
  Enabled: true

Layout/MultilineHashBraceLayout:
  Description: >-
    Checks that the closing brace in a hash literal is
    symmetrical with respect to the opening brace and the
    hash elements.
  Enabled: true
  EnforcedStyle: new_line

Layout/MultilineMethodCallBraceLayout:
  Description: >-
    Checks that the closing brace in a method call is
    symmetrical with respect to the opening brace and the
    method arguments.
  Enabled: true
  EnforcedStyle: symmetrical

# Supports --auto-correct
Layout/MultilineMethodCallIndentation:
  Description:
    Checks indentation of method calls with the dot operator that span more
    than one line.
  Enabled: true
  EnforcedStyle: indented
  SupportedStyles:
    - aligned
    - indented
  IndentationWidth:

Layout/MultilineMethodDefinitionBraceLayout:
  Description: >-
    Checks that the closing brace in a method definition is
    symmetrical with respect to the opening brace and the
    method parametters.
  Enabled: true

# The default (aligned) would force multi line operations to look like this
# balance = Balance.
#           where(cond).
#           where(cond).
#           first
Layout/MultilineOperationIndentation:
  Enabled: false
  EnforcedStyle: indented

# Supports --auto-correct
Layout/RescueEnsureAlignment:
  Description: Align rescues and ensures correctly.
  Enabled: true

# Supports --auto-correct
Layout/SpaceAfterColon:
  Description: Use spaces after colons.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true

# Supports --auto-correct
Layout/SpaceAfterComma:
  Description: Use spaces after commas.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true

# Supports --auto-correct
Layout/SpaceAfterMethodName:
  Description:
    Do not put a space between a method name and the opening parenthesis
    in a method definition.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces
  Enabled: true

# Supports --auto-correct
Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-space-bang
  Enabled: true

# Supports --auto-correct
Layout/SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true

# Supports --auto-correct
Layout/SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true
  EnforcedStyleInsidePipes: no_space

# Supports --auto-correct
Layout/SpaceAroundEqualsInParameterDefault:
  Description:
    Checks that the equals signs in parameter default assignments have or
    don't have surrounding space depending on configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-around-equals
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space

Layout/SpaceAroundKeyword:
  Description: "Use a space around keywords if appropriate."
  Enabled: true

# Supports --auto-correct
Layout/SpaceAroundOperators:
  Description: Use a single space around operators.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
  AllowForAlignment: true

# Supports --auto-correct
Layout/SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space

# Supports --auto-correct
Layout/SpaceBeforeComma:
  Description: No spaces before commas.
  Enabled: true

# Supports --auto-correct
Layout/SpaceBeforeComment:
  Description: Checks for missing space between code and a comment on the same line.
  Enabled: true

# Supports --auto-correct
Layout/SpaceBeforeFirstArg:
  Description:
    Put a space between a method name and the first argument in a method
    call without parentheses.
  Enabled: true

# Supports --auto-correct
Layout/SpaceBeforeSemicolon:
  Description: No spaces before semicolons.
  Enabled: true

Layout/SpaceInLambdaLiteral:
  Enabled: false

Layout/SpaceInsideArrayPercentLiteral:
  Enabled: false

# Supports --auto-correct
Layout/SpaceInsideBlockBraces:
  Description:
    Checks that block braces have or don't have surrounding space. For blocks
    taking parameters, checks that the left brace has or doesn't have trailing space.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
    - space
    - no_space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# Supports --auto-correct
Layout/SpaceInsideParens:
  Description: "No spaces after ( or before )."
  StyleGuide: "#spaces-braces"
  Enabled: true

Layout/SpaceInsideArrayLiteralBrackets:
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space
    # 'compact' normally requires a space inside the brackets, with the exception
    # that successive left brackets or right brackets are collapsed together
    - compact
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStylesForEmptyBrackets:
    - space
    - no_space
  Enabled: true

Layout/SpaceInsideReferenceBrackets:
  EnforcedStyleForEmptyBrackets: no_space
  SupportedStyles:
    - space
    - no_space
  Enabled: true

# Supports --auto-correct
Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
    - space
    - no_space

Layout/SpaceInsidePercentLiteralDelimiters:
  Description: "No unnecessary spaces inside delimiters of %i/%w/%x literals."
  Enabled: true

# Supports --auto-correct
Layout/SpaceInsideRangeLiteral:
  Description: No spaces inside range literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-space-inside-range-literals
  Enabled: true

# Supports --auto-correct
Layout/SpaceInsideStringInterpolation:
  Description: Checks for padding/surrounding spaces inside string interpolation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#string-interpolation
  Enabled: true
  EnforcedStyle: no_space
  SupportedStyles:
    - space
    - no_space

# Supports --auto-correct
Layout/IndentationStyle:
  Description: No hard tabs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true

# Supports --auto-correct
Layout/TrailingEmptyLines:
  Description: Checks trailing blank lines and final newline.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#newline-eof
  Enabled: true
  EnforcedStyle: final_newline
  SupportedStyles:
    - final_newline
    - final_blank_line

# Supports --auto-correct
Layout/TrailingWhitespace:
  Description: Avoid trailing whitespace.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-trailing-whitespace
  Enabled: true

##################################
##################################
##################################
##################################
##################################
##################################
##################################
######### Rubocop Style ###################
##################################
##################################
##################################
##################################
##################################
##################################
##################################
Style/AccessModifierDeclarations:
  Enabled: true

# Supports --auto-correct
Style/RedundantSortBy:
  Description: Use `sort` instead of `sort_by { |x| x }`.
  Enabled: true

# Supports --auto-correct
Style/Alias:
  Description: Use alias_method instead of alias.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#alias-method
  EnforcedStyle: prefer_alias_method
  Enabled: true

# Supports --auto-correct
Style/AndOr:
  Description: Use &&/|| instead of and/or.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-and-or-or
  Enabled: true
  EnforcedStyle: always
  SupportedStyles:
    - always
    - conditionals

Style/RedundantSort:
  Enabled: false

# Supports --auto-correct
Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#array-join
  Enabled: true

Style/AsciiComments:
  Description: Use only ascii symbols in comments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#english-comments
  Enabled: true

# Supports --auto-correct
Style/Attr:
  Description: Checks for uses of Module#attr.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#attr
  Enabled: true

Style/AutoResourceCleanup:
  Description:
    Suggests the usage of an auto resource cleanup version of a method (if
    available).
  Enabled: false

# Supports --auto-correct
Style/BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-q-shorthand
  Enabled: true
  EnforcedStyle: bare_percent
  SupportedStyles:
    - percent_q
    - bare_percent

Style/BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-BEGIN-blocks
  Enabled: true

# Supports --auto-correct
Style/BlockComments:
  Description: Do not use block comments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-block-comments
  Enabled: true

# Supports --auto-correct
Style/Sample:
  Description: Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Fixnum]`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code
  Enabled: true

# Supports --auto-correct
Style/BlockDelimiters:
  Description: Check for uses of braces or do/end around single line or multi-line blocks.
  Enabled: true
  EnforcedStyle: line_count_based
  SupportedStyles:
    - line_count_based
    - braces_for_chaining
  ProceduralMethods:
    - benchmark
    - bm
    - bmbm
    - create
    - each_with_object
    - measure
    - new
    - realtime
    - tap
    - with_object
  FunctionalMethods:
    - let
    - let!
    - subject
    - watch
  IgnoredMethods:
    - lambda
    - proc
    - it

# Supports --auto-correct

Style/CaseEquality:
  Description: Avoid explicit use of the case equality operator(===).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-case-equality
  Enabled: true

# Supports --auto-correct
Style/CharacterLiteral:
  Description: Checks for uses of character literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-character-literals
  Enabled: true

Style/ClassAndModuleChildren:
  Description: Checks style of children classes and modules.
  Enabled: true
  EnforcedStyle: compact

# Supports --auto-correct
Style/ClassCheck:
  Description: Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  Enabled: true
  EnforcedStyle: is_a?

# Supports --auto-correct
Style/ClassMethods:
  Description: Use self when defining module/class methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#def-self-class-methods
  Enabled: true

Style/ClassVars:
  Description: Avoid the use of class variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-class-vars
  Enabled: true

# Supports --auto-correct
Style/CollectionMethods:
  Description: Preferred collection methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#map-find-select-reduce-size
  Enabled: true
  PreferredMethods:
    collect: map
    collect!: map!
    inject: reduce
    detect: detect

# Supports --auto-correct
Style/ColonMethodCall:
  Description: ! "Do not use :: for method call."
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#double-colons
  Enabled: true

Style/ColonMethodDefinition:
  Description: "Do not use :: for defining class methods."
  StyleGuide: "#colon-method-definition"
  Enabled: true

# Supports --auto-correct
Style/CommandLiteral:
  Description: Use `` or %x around command literals.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-x
  Enabled: true
  EnforcedStyle: backticks
  AllowInnerBackticks: true

# Supports --auto-correct
Style/CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#annotate-keywords
  Enabled: true
  Keywords:
    - TODO
    - FIXME
    - OPTIMIZE
    - HACK
    - REVIEW

Style/CommentedKeyword:
  Enabled: true

# Supports --auto-correct
Style/ConditionalAssignment:
  Description:
    Use the return value of `if` and `case` statements for assignment to
    a variable and variable comparison instead of assigning that variable inside of
    each branch.
  EnforcedStyle: assign_to_condition
  Enabled: true
  SingleLineConditionsOnly: true

Style/ConstantVisibility:
  Enabled: false

# Supports --auto-correct
Style/Copyright:
  Description: Include a copyright notice in each file before any code.
  Enabled: false
  Notice: ^Copyright (\(c\) )?2[0-9]{3} .+
  AutocorrectNotice: ""

Style/DateTime:
  Enabled: false

# Supports --auto-correct
Style/DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: true

Style/Dir:
  Enabled: true

# Don't force documentation
Style/Documentation:
  Enabled: false

Style/DocumentationMethod:
  Enabled: false

Style/DoubleNegation:
  Description: Checks for uses of double negation (!!).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-bang-bang
  Enabled: true

Style/EachForSimpleLoop:
  Description: >-
    Use `Integer#times` for a simple loop which iterates a fixed
    number of times.
  Enabled: true

Style/EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: false

Style/EmptyBlockParameter:
  Description: "Omit pipes for empty block parameters."
  Enabled: true

Style/EmptyCaseCondition:
  Enabled: true

# Supports --auto-correct
Style/EmptyElse:
  Description: Avoid empty else-clauses.
  Enabled: true
  EnforcedStyle: both
  SupportedStyles:
    - empty
    - nil
    - both

Style/EmptyLambdaParameter:
  Description: "Omit parens for empty lambda parameters."
  Enabled: true

# Supports --auto-correct
Style/EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#literal-array-hash
  Enabled: true

Style/EmptyMethod:
  Enabled: true

# Supports --auto-correct
Style/Encoding:
  Description: Use UTF-8 as the source file encoding.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#utf-8
  Enabled: false

Style/EndBlock:
  Description: Avoid the use of END blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-END-blocks
  Enabled: false

Style/EvalWithLocation:
  Description: "Pass `__FILE__` and `__LINE__` to `eval` method, as they are used by backtraces."
  Enabled: false

# Supports --auto-correct
Style/EvenOdd:
  Description: Favor the use of Fixnum#even? && Fixnum#odd?
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#predicate-methods
  Enabled: true

Style/ExpandPathArguments:
  Description: "Use `expand_path(__dir__)` instead of `expand_path('..', __FILE__)`."
  Enabled: false

Style/FloatDivision:
  Description: "Use `a / b.to_f instead a.to_f / b.to_f."
  EnforcedStyle: single_coerce
  Enabled: true
Style/For:
  Description: Checks use of for or each in multiline loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-for-loops
  Enabled: true
  EnforcedStyle: each
  SupportedStyles:
    - each

Style/FormatString:
  Description: Enforce the use of Kernel#sprintf, Kernel#format or String#%.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#sprintf
  Enabled: false
  EnforcedStyle: format
  SupportedStyles:
    - format
    - sprintf
    - percent

Style/FormatStringToken:
  Enabled: false

# Supports --auto-correct
Style/FrozenStringLiteralComment:
  Description:
    Add the frozen_string_literal comment to the top of files to help transition
    from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false
  EnforcedStyle: always
  SupportedStyles:
    - always

Style/GlobalVars:
  Description: Do not introduce global variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#instance-vars
  Reference: http://www.zenspider.com/Languages/Ruby/QuickRef.html
  Enabled: true
  AllowedVariables: []

# This thing seems a little error prone, and is kind of annoying. Let's
# leave this up to the individual.
Style/GuardClause:
  Enabled: false

# Don't force colon-style hash pairs. Sometimes ya just don't want 'em.
# (Allen approved!)
Style/HashSyntax:
  EnforcedStyle: ruby19
  Enabled: true

Style/IdenticalConditionalBranches:
  Description:
    Checks that conditional statements do not have an identical line at the
    end of each branch, which can validly be moved out of the conditional.
  Enabled: true

Style/IfInsideElse:
  Description: Finds if nodes inside else, which can be converted to elsif.
  Enabled: true

# Don't force trailing if/unless for single-line conditionals
Style/IfUnlessModifier:
  Enabled: false

Style/IfUnlessModifierOfIfUnless:
  Description: >-
    Checks for if and unless statements used as modifers of other if or unless statements.
  Enabled: true

Style/IfWithSemicolon:
  Description: Do not use if x; .... Use the ternary operator instead.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon-ifs
  Enabled: true

# Supports --auto-correct
Style/InfiniteLoop:
  Description: Use Kernel#loop for infinite loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#infinite-loop
  Enabled: true

Style/InlineComment:
  Description: Avoid inline comments.
  Enabled: false

Style/InverseMethods:
  Enabled: true

Style/IpAddresses:
  Enabled: true

# Supports --auto-correct
Style/Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#lambda-multi-line
  Enabled: true

# Supports --auto-correct
Style/LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc-call
  Enabled: true
  EnforcedStyle: braces
# Supports --auto-correct
Style/LineEndConcatenation:
  Description: Use \ instead of + or << to concatenate two string literals at line end.
  Enabled: true

Style/MethodCallWithArgsParentheses:
  Enabled: false

# Supports --auto-correct
Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-args-no-parens
  Enabled: true

Style/MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks
  Enabled: false

# Supports --auto-correct
Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: true
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses

Lint/MissingSuper:
  Enabled: true

Style/MissingRespondToMissing:
  Enabled: false

Style/MinMax:
  Enabled: false

Style/MissingElse:
  Description:
    Require if/case expressions to have an else branches. If enabled, it
    is recommended that Style/UnlessElse and Style/EmptyElse be enabled. This will conflict
    with Style/EmptyElse if Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    - if
    - case
    - both

Style/MixinGrouping:
  Description:
    This cop checks for grouping of mixins in `class` and `module` bodies. By default
    it enforces mixins to be placed in separate declarations, but it can be configured to enforce
    grouping them in one declaration.
  Enabled: true

Style/MixinUsage:
  Description:
    This cop checks that `include`, `extend` and `prepend` exists at the top level.
    Using these at the top level affects the behavior of `Object`. There will not be using
    `include`, `extend` and `prepend` at the top level. Let's use it inside `class` or `module`.
  Enabled: true

# Supports --auto-correct
Style/ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#module-function
  Enabled: false

Style/MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#single-line-blocks
  Enabled: false

Style/MultilineIfModifier:
  Enabled: true

# Supports --auto-correct
Style/MultilineIfThen:
  Description: Do not use then for multi-line if/unless.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-then
  Enabled: true

Style/MultilineMemoization:
  Enabled: false

Style/MultilineTernaryOperator:
  Description: ! "Avoid multi-line ?: (the ternary operator); use if/unless instead."
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-multiline-ternary
  Enabled: true

Style/MultipleComparison:
  Enabled: false

# Supports --auto-correct
Style/MutableConstant:
  Description: Do not assign mutable objects to constants.
  Enabled: true

# Supports --auto-correct
Style/NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#unless-for-negatives
  Enabled: true

# Supports --auto-correct
Style/NegatedWhile:
  Description: Favor until over while for negative conditions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#until-for-negatives
  Enabled: false

Style/NestedModifier:
  Enabled: true

Style/NestedParenthesizedCalls:
  Description:
    Parenthesize method calls which are nested inside the argument list of
    another parenthesized method call.
  Enabled: true

Style/NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-ternary
  Enabled: true

Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-conditionals
  Enabled: false
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
    - skip_modifier_ifs
    - always

# Supports --auto-correct
Style/NilComparison:
  Description: Prefer x.nil? to x == nil.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#predicate-methods
  Enabled: true

# Supports --auto-correct
Style/NonNilCheck:
  Description: Checks for redundant nil checks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-non-nil-checks
  Enabled: true
  IncludeSemanticChanges: false

# Supports --auto-correct
Style/Not:
  Description: Use ! instead of not.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#bang-not-not
  Enabled: true

Style/NumericLiteralPrefix:
  EnforcedOctalStyle: zero_with_o
  SupportedOctalStyles:
    - zero_with_o
    - zero_only
  Enabled: true

# We just don't like this style.
Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscores-in-numerics
  Enabled: true

Style/NumericPredicate:
  Enabled: false

Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#ternary-operator
  Enabled: true

Style/OptionHash:
  Description: Don't use option hashes when you can use keyword arguments.
  Enabled: false
  SuspiciousParamNames:
    - options
    - opts
    - args
    - params
    - parameters

Style/OptionalArguments:
  Description:
    Checks for optional arguments that do not appear at the end of the argument
    list
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#optional-arguments
  Enabled: true

Style/OrAssignment:
  Enabled: true

# Supports --auto-correct
Style/ParallelAssignment:
  Description:
    Check for simple usages of parallel assignment. It will only warn when
    the number of variables matches on both sides of the assignment.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parallel-assignment
  Enabled: false

# Supports --auto-correct
Style/ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-parens-if
  Enabled: true
  AllowSafeAssignment: true

# Supports --auto-correct
Style/PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-literal-braces
  Enabled: true
  PreferredDelimiters:
    ! "%": ()
    ! "%i": ()
    ! "%q": ()
    ! "%Q": ()
    ! "%r": ! "{}"
    ! "%s": ()
    ! "%w": ()
    ! "%W": ()
    ! "%x": ()

# Supports --auto-correct
Style/PercentQLiterals:
  Description: Checks if uses of %Q/%q match the configured preference.
  Enabled: false
  EnforcedStyle: lower_case_q
  SupportedStyles:
    - lower_case_q
    - upper_case_q

# Supports --auto-correct
Style/PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-perl-regexp-last-matchers
  Enabled: true

# Supports --auto-correct
Style/PreferredHashMethods:
  Description: Checks for use of deprecated Hash methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#hash-key
  Enabled: true

# Supports --auto-correct
Style/Proc:
  Description: Use proc instead of Proc.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc
  Enabled: false

Style/RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  # Also https://github.com/airbnb/ruby#exception-class-messages
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#exception-class-messages
  Enabled: true
  EnforcedStyle: exploded
  SupportedStyles:
    - compact
    - exploded

Style/RandomWithOffset:
  Description: Prefer to use ranges when generating random numbers instead of integers with offsets.
  StyleGuide: "#random-numbers"
  Enabled: false

# Supports --auto-correct
Style/RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#begin-implicit
  Enabled: true

Style/RedundantConditional:
  Enabled: true

# Supports --auto-correct
Style/RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-runtimeerror
  Enabled: true

# Supports --auto-correct
Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true

# Supports --auto-correct
Style/RedundantParentheses:
  Description: Checks for parentheses that seem not to serve any purpose.
  Enabled: true

# Supports --auto-correct
Style/RedundantReturn:
  Description: Don't use return where it's not required.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-return
  Enabled: true
  AllowMultipleReturnValues: false

# Supports --auto-correct
Style/RedundantSelf:
  Description: Don't use self where it's not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-self-unless-required
  Enabled: false

# Supports --auto-correct
Style/RegexpLiteral:
  Description: Use / or %r around regular expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-r
  Enabled: false
  EnforcedStyle: slashes
  SupportedStyles:
    - slashes
    - percent_r
    - mixed
  AllowInnerSlashes: false

# Supports --auto-correct
Style/RescueModifier:
  Description: Avoid using rescue in its modifier form.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-rescue-modifiers
  Enabled: true

Style/RescueStandardError:
  Description: "Avoid rescuing without specifying an error class."
  Enabled: false

Style/ReturnNil:
  EnforcedStyle: return_nil
  Enabled: true

Style/SafeNavigation:
  Enabled: false

# Supports --auto-correct
Style/SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been used.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#self-assignment
  Enabled: true

# Supports --auto-correct
Style/Semicolon:
  Description: Don't use semicolons to terminate expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon
  Enabled: true
  AllowAsExpressionSeparator: false

Style/Send:
  Description:
    Prefer `Object#__send__` or `Object#public_send` to `send`, as `send`
    may overlap with existing methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#prefer-public-send
  Enabled: false

# Supports --auto-correct
Style/SignalException:
  Description: Checks for proper usage of fail and raise.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#fail-method
  Enabled: false
  EnforcedStyle: semantic
  SupportedStyles:
    - only_raise
    - only_fail
    - semantic

Style/SingleLineBlockParams:
  Description: Enforces the names of some block params.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#reduce-blocks
  Enabled: false
  Methods:
    - reduce:
        - a
        - e
    - inject:
        - a
        - e

# Supports --auto-correct
Style/SingleLineMethods:
  Description: Avoid single-line methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-single-line-methods
  Enabled: true
  AllowIfMethodIsEmpty: true

# Supports --auto-correct
Style/SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-cryptic-perlisms
  Enabled: true

Style/StabbyLambdaParentheses:
  Description: Check for the usage of parentheses around stabby lambda arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#stabby-lambda-with-args
  Enabled: false
  EnforcedStyle: require_parentheses
  SupportedStyles:
    - require_parentheses
    - require_no_parentheses

Style/StderrPuts:
  Enabled: true

Style/StringHashKeys:
  Description: "Prefer symbols instead of strings as hash keys."
  StyleGuide: "#symbols-as-keys"
  Enabled: false

# Allow double-quoted strings without interpolation. The customer is always right.
Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

# Supports --auto-correct
Style/StringLiteralsInInterpolation:
  Description:
    Checks if uses of quotes inside expressions in interpolated strings match
    the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes

# Supports --auto-correct
Style/StringMethods:
  Description: Checks if configured preferred methods are used over non-preferred.
  Enabled: true
  PreferredMethods:
    intern: to_sym

Style/StructInheritance:
  Description: Checks for inheritance from Struct.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-extend-struct-new
  Enabled: true

Style/SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-i
  EnforcedStyle: brackets
  Enabled: true

# Supports --auto-correct
Style/SymbolLiteral:
  Description: Use plain symbols instead of string symbols when possible.
  Enabled: true

# Supports --auto-correct
Style/SymbolProc:
  Description: Use symbols as procs instead of blocks when possible.
  Enabled: true
  IgnoredMethods:
    - respond_to

Style/TernaryParentheses:
  Enabled: true

Style/TrailingBodyOnClass:
  Description: "Class body goes below class statement."
  Enabled: true

Style/TrailingBodyOnMethodDefinition:
  Description: "Method body goes below definition."
  Enabled: true

Style/TrailingBodyOnModule:
  Description: "Module body goes below module statement."
  Enabled: true

Style/TrailingCommaInArguments:
  Enabled: false

# Enforce trailing commas (we like 'em!)
Style/TrailingCommaInArrayLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma

# Enforce trailing commas (we like 'em!)
Style/TrailingCommaInHashLiteral:
  Enabled: true
  EnforcedStyleForMultiline: consistent_comma

# Supports --auto-correct
Style/TrailingUnderscoreVariable:
  Description:
    Checks for the usage of unneeded trailing underscores at the end of parallel
    variable assignment.
  Enabled: false

# Allow question mark accessor methods
Style/TrivialAccessors:
  AllowPredicates: true

Style/UnlessElse:
  Description: Do not use unless with else. Rewrite these with the positive case first.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-else-with-unless
  Enabled: true

# Supports --auto-correct
Style/RedundantCapitalW:
  Description: Checks for %W when interpolation is not needed.
  Enabled: false

Style/RedundantCondition:
  Enabled: false

# Supports --auto-correct
Style/RedundantInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: false

# Supports --auto-correct
Style/RedundantPercentQ:
  Description: Checks for %q/%Q when single quotes or double quotes would do.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-q
  Enabled: false

Style/UnpackFirst:
  Enabled: false

# Supports --auto-correct
Style/VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in strings.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#curlies-interpolate
  Enabled: false

# Supports --auto-correct
Style/WhenThen:
  Description: Use when x then ... for one-line cases.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#one-line-cases
  Enabled: false

# Supports --auto-correct
Style/WhileUntilDo:
  Description: Checks for redundant do after while or until.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-multiline-while-do
  Enabled: true

# Supports --auto-correct
Style/WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#while-as-a-modifier
  Enabled: false

# Supports --auto-correct
Style/WordArray:
  Description: Use %w or %W for arrays of words.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-w
  Enabled: false
  MinSize: 0
  WordRegex: !ruby/regexp /\A[\p{Word}]+\z/

Style/YodaCondition:
  Enabled: true

Style/ZeroLengthPredicate:
  Description: "Use #empty? when testing for objects of length 0."
  Enabled: true
